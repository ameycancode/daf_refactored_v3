# =============================================================================
# CLEANUP WORKFLOW - .github/workflows/cleanup-resources.yml
# =============================================================================

name: üßπ Cleanup Energy Forecasting Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to cleanup'
        required: true
        type: choice
        options: [dev, preprod, prod]
      cleanup_type:
        description: 'Cleanup type'
        required: true
        type: choice
        options: [test-resources, endpoints-only, complete-pipeline]
        default: test-resources
      preserve_s3:
        description: 'Preserve S3 data'
        type: boolean
        default: true
      confirm_cleanup:
        description: 'Confirm cleanup (type "CONFIRM")'
        required: true
        type: string

jobs:
  cleanup_resources:
    name: üßπ Cleanup Resources
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_cleanup == 'CONFIRM'
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 botocore

      - name: üéØ Determine Environment Configuration
        id: env_config
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          case $ENVIRONMENT in
            "dev")
              SAGEMAKER_ROLE_ARN="arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/sdcp-dev-sagemaker-energy-forecasting-datascientist-role"
              ;;
            "preprod")
              SAGEMAKER_ROLE_ARN="arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/sdcp-preprod-sagemaker-energy-forecasting-datascientist-role"
              ;;
            "prod")
              SAGEMAKER_ROLE_ARN="arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/sdcp-prod-sagemaker-energy-forecasting-datascientist-role"
              ;;
          esac
          echo "sagemaker_role_arn=$SAGEMAKER_ROLE_ARN" >> $GITHUB_OUTPUT

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.env_config.outputs.sagemaker_role_arn }}
          role-session-name: energy-forecasting-cleanup-${{ github.run_id }}
          aws-region: us-west-2

      - name: üßπ Execute Cleanup
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          CLEANUP_TYPE: ${{ github.event.inputs.cleanup_type }}
          PRESERVE_S3: ${{ github.event.inputs.preserve_s3 }}
        run: |
          echo "=== CLEANUP CONFIGURATION ==="
          echo "Environment: $ENVIRONMENT"
          echo "Cleanup Type: $CLEANUP_TYPE"
          echo "Preserve S3: $PRESERVE_S3"
          echo "============================="

          case $CLEANUP_TYPE in
            "test-resources")
              python sdcp_code/deployment/cleanup_enhanced_mlops.py \
                --environment $ENVIRONMENT \
                --cleanup-test-resources \
                --preserve-s3
              ;;
            "endpoints-only")
              python sdcp_code/deployment/cleanup_enhanced_mlops.py \
                --environment $ENVIRONMENT \
                --endpoints-only \
                --preserve-s3
              ;;
            "complete-pipeline")
              python sdcp_code/deployment/cleanup_enhanced_mlops.py \
                --environment $ENVIRONMENT \
                --complete-cleanup \
                $([ "$PRESERVE_S3" = "true" ] && echo "--preserve-s3")
              ;;
          esac
